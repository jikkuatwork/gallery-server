{"ast":null,"code":"import _regeneratorRuntime from\"/Users/liuchuanzong/workspace/learning/web/gallery-server/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/liuchuanzong/workspace/learning/web/gallery-server/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/liuchuanzong/workspace/learning/web/gallery-server/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef}from'react';import ImageGallery from'react-image-gallery';import'./Gallery.css';export default function Gallery(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),showNav=_useState2[0],setShowNav=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),showThumbnails=_useState4[0],setShowThumbnails=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),images=_useState6[0],setImages=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isFullscreen=_useState8[0],setIsFullscreen=_useState8[1];var galleryRef=useRef(null);useEffect(function(){function fetchImages(){return _fetchImages.apply(this,arguments);}function _fetchImages(){_fetchImages=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var srcs;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return window.fetch('http://localhost:7001/api/images').then(function(resp){return resp.json();});case 3:srcs=_context.sent;_context.next=9;break;case 6:_context.prev=6;_context.t0=_context[\"catch\"](0);return _context.abrupt(\"return\",console.error('fetchImages',_context.t0));case 9:srcs&&setImages(srcs.map(function(src){return{original:src,thumbnail:src};}));case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,6]]);}));return _fetchImages.apply(this,arguments);}fetchImages();},[]);// let isFullscreen = false;\nvar onScreenChange=function onScreenChange(fullscreenElement){// console.log('fullscreenElement:', fullscreenElement);\nvar isFullscreen=!!fullscreenElement;// console.log('isFullscreen onScreenChange:', isFullscreen);\nsetIsFullscreen(isFullscreen);if(isFullscreen){setShowNav(false);setShowThumbnails(false);}else{setShowNav(true);setShowThumbnails(true);}};var onClick=function onClick(){if(ismimicDbClick('ImageGallery')){// console.log('isFullscreen onClick:', isFullscreen);\nisFullscreen?galleryRef.current.exitFullScreen():galleryRef.current.fullScreen();}};return React.createElement(ImageGallery,{ref:galleryRef,items:images,showBullets:true,showIndex:true,slideOnThumbnailOver:false,useBrowserFullscreen:true,showNav:showNav,showThumbnails:showThumbnails,onScreenChange:onScreenChange,onClick:onClick});}function ismimicDbClick(key){/** 两次点击间隔时间。单位 ms */var now=Date.now();var prevClickTimestamp=ismimicDbClick.prevClickTimestamps[key]||0;var gap=now-prevClickTimestamp;console.log({now:now,prevClickTimestamp:prevClickTimestamp,gap:gap});var isdbClick=gap>=100&&gap<=500;// save previous click timestamp\nismimicDbClick.prevClickTimestamps[key]=now;return isdbClick;}ismimicDbClick.prevClickTimestamps={};","map":{"version":3,"sources":["/Users/liuchuanzong/workspace/learning/web/gallery-server/client/src/components/Gallery.js"],"names":["React","useState","useEffect","useRef","ImageGallery","Gallery","showNav","setShowNav","showThumbnails","setShowThumbnails","images","setImages","isFullscreen","setIsFullscreen","galleryRef","fetchImages","window","fetch","then","resp","json","srcs","console","error","map","src","original","thumbnail","onScreenChange","fullscreenElement","onClick","ismimicDbClick","current","exitFullScreen","fullScreen","key","now","Date","prevClickTimestamp","prevClickTimestamps","gap","log","isdbClick"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport ImageGallery from 'react-image-gallery';\nimport './Gallery.css';\n\nexport default function Gallery() {\n  const [showNav, setShowNav] = useState(true);\n  const [showThumbnails, setShowThumbnails] = useState(true);\n  const [images, setImages] = useState([]);\n  const [isFullscreen, setIsFullscreen] = useState(false);\n  const galleryRef = useRef(null);\n\n  useEffect(() => {\n    async function fetchImages() {\n      let srcs;\n\n      try {\n        srcs = await window.fetch('http://localhost:7001/api/images')\n          .then(resp => resp.json())\n\n      } catch (error) {\n        return console.error('fetchImages', error)\n      }\n\n      srcs && setImages(srcs.map(src => ({ original: src, thumbnail: src })));\n    }\n\n    fetchImages();\n  }, [])\n\n  // let isFullscreen = false;\n  const onScreenChange = (fullscreenElement) => {\n    // console.log('fullscreenElement:', fullscreenElement);\n    const isFullscreen = !!fullscreenElement;\n    // console.log('isFullscreen onScreenChange:', isFullscreen);\n    setIsFullscreen(isFullscreen);\n\n    if (isFullscreen) {\n      setShowNav(false);\n      setShowThumbnails(false);\n    } else {\n      setShowNav(true);\n      setShowThumbnails(true);\n    }\n  };\n\n  const onClick = () => {\n    if (ismimicDbClick('ImageGallery')) {\n      // console.log('isFullscreen onClick:', isFullscreen);\n      isFullscreen ? galleryRef.current.exitFullScreen() : galleryRef.current.fullScreen();\n    }\n  };\n\n  return (\n    <ImageGallery\n      ref={galleryRef}\n      items={images}\n      showBullets={true}\n      showIndex={true}\n      slideOnThumbnailOver={false}\n      useBrowserFullscreen={true}\n      showNav={showNav}\n      showThumbnails={showThumbnails}\n      onScreenChange={onScreenChange}\n      onClick={onClick}\n    />\n  );\n}\n\nfunction ismimicDbClick(key) {\n  /** 两次点击间隔时间。单位 ms */\n  const now = Date.now();\n\n  const prevClickTimestamp = ismimicDbClick.prevClickTimestamps[key] || 0;\n  const gap = now - prevClickTimestamp;\n  console.log({ now, prevClickTimestamp, gap });\n\n  const isdbClick = gap >= 100 && gap <= 500;\n\n  // save previous click timestamp\n  ismimicDbClick.prevClickTimestamps[key] = now;\n\n  return isdbClick;\n}\n\nismimicDbClick.prevClickTimestamps = {};\n"]},"metadata":{},"sourceType":"module"}